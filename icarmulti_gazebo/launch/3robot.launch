<launch>

    <!-- 设置launch文件的参数 -->
    <arg name="world_name" value="$(find icarmulti_gazebo)/worlds/cloister.world"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

	<!-- begin robot1 -->
	<group ns="robot1">
		<!-- 加载机器人模型描述参数 -->
		<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find icar_description)/urdf/icar.urdf.xacro' bodyframe:=/ ns:=robot1" />
		<!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
		<!-- 运行robot_state_publisher节点，发布tf  -->
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
			<param name="publish_frequency" type="double" value="50.0" />
			<param name="tf_prefix" value="robot1" />
		</node>
		<!-- gazebo initial pos -->
		<arg name="x1" default="0.0"/>
		<arg name="y1" default="0.0"/>
		<arg name="z1" default="0.0"/>
		<!-- 在gazebo中加载机器人模型 -->
		<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
			args="-urdf -model robot1 -param robot_description -x $(arg x1) -y $(arg y1) -z $(arg z1)" />
	</group>
	
	<!-- begin robot2 -->
	<group ns="robot2">
		<!-- 加载机器人模型描述参数 -->
		<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find icar_description)/urdf/icar.urdf.xacro' bodyframe:=/ ns:=robot2" />
		<!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
		<!-- 运行robot_state_publisher节点，发布tf  -->
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
			<param name="publish_frequency" type="double" value="50.0" />
			<param name="tf_prefix" value="robot2" />
		</node>
		<!-- gazebo initial pos -->
		<arg name="x2" default="0.0"/>
		<arg name="y2" default="1.0"/>
		<arg name="z2" default="0.0"/>
		<!-- 在gazebo中加载机器人模型 -->
		<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
			args="-urdf -model robot2 -param robot_description -x $(arg x2) -y $(arg y2) -z $(arg z2)" />
	</group>

	<!-- begin robot3 -->
	<group ns="robot3">
		<!-- 加载机器人模型描述参数 -->
		<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find icar_description)/urdf/icar.urdf.xacro' bodyframe:=/ ns:=robot3" />
		<!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
		<!-- 运行robot_state_publisher节点，发布tf  -->
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
			<param name="publish_frequency" type="double" value="50.0" />
			<param name="tf_prefix" value="robot3" />
		</node>
		<!-- gazebo initial pos -->
		<arg name="x3" default="0.0"/>
		<arg name="y3" default="-1.0"/>
		<arg name="z3" default="0.0"/>
		<!-- 在gazebo中加载机器人模型 -->
		<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
			args="-urdf -model robot3 -param robot_description -x $(arg x3) -y $(arg y3) -z $(arg z3)" />
	</group>

</launch>
